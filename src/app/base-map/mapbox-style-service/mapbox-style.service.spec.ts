// ----------------------------------------------------------------------
// Copyright 2022 Schlumberger. All rights reserved in Schlumberger
// authored and generated code (including the selection and
// arrangement of the source code base regardless of the authorship
// of individual files), but not including any copyright interest(s)
// owned by a third party related to source code or object code
// authored or generated by non-Schlumberger personnel.
//
// This source code includes Schlumberger confidential and/or
// proprietary information and may include Schlumberger trade secrets.
// Any use, disclosure and/or reproduction is prohibited unless
// authorized in writing.
//
// Publication Rights :: Schlumberger Private
// ----------------------------------------------------------------------
import {
  HttpClientTestingModule,
  HttpTestingController,
} from '@angular/common/http/testing';
import { fakeAsync, TestBed, tick } from '@angular/core/testing';
import * as mapboxgl from 'mapbox-gl';

import {
  BingImageryMetadataResponse,
  MapboxStyleService,
} from './mapbox-style.service';

describe('MapboxStyleService', () => {
  let service: MapboxStyleService;
  let httpTestingController: HttpTestingController;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
    });
    service = TestBed.inject(MapboxStyleService);
    httpTestingController = TestBed.inject(HttpTestingController);
  });

  afterEach(() => {
    httpTestingController.verify();
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });

  it('should get correct style', fakeAsync(() => {
    const mockResponse: BingImageryMetadataResponse = {
      statusCode: 200,
      resourceSets: [
        {
          resources: [
            {
              imageUrl:
                'http://ecn.{subdomain}.tiles.virtualearth.net/tiles/a{quadkey}.jpeg?g=12345',
              imageUrlSubdomains: ['t0', 't1', 't2', 't3'],
              zoomMax: 21,
              zoomMin: 1,
            },
          ],
        },
      ],
    };

    const expectedStyle: mapboxgl.Style = {
      version: 8,
      sources: {
        'raster-tiles': {
          type: 'raster',
          tiles: [
            'https://ecn.t0.tiles.virtualearth.net/tiles/a{quadkey}.jpeg?g=12345',
            'https://ecn.t1.tiles.virtualearth.net/tiles/a{quadkey}.jpeg?g=12345',
            'https://ecn.t2.tiles.virtualearth.net/tiles/a{quadkey}.jpeg?g=12345',
            'https://ecn.t3.tiles.virtualearth.net/tiles/a{quadkey}.jpeg?g=12345',
          ],
        },
      },
      layers: [
        {
          id: 'tiles',
          type: 'raster',
          source: 'raster-tiles',
          minzoom: 1,
          maxzoom: 21,
        },
      ],
    };

    const apiKey = 'test-api-key';
    service.get(apiKey).subscribe((style) => {
      expect(style).toStrictEqual(expectedStyle);
    });

    const request = httpTestingController.expectOne((req) =>
      req.url.includes(apiKey)
    );

    expect(request.request.method).toEqual('GET');

    request.flush(mockResponse);

    tick();
  }));
});
